//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.Config
{

public sealed partial class GraphPosCfg :  Bright.Config.BeanBase 
{
    public GraphPosCfg(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = _json["id"]; }
        { if(!_json["name"].IsString) { throw new SerializationException(); }  Name = _json["name"]; }
        { if(!_json["position"].IsObject) { throw new SerializationException(); }  Position = GraphPoint.Position.DeserializePosition(_json["position"]);  }
        { if(!_json["ifActivate"].IsNumber) { throw new SerializationException(); }  IfActivate = _json["ifActivate"]; }
        { if(!_json["forces"].IsNumber) { throw new SerializationException(); }  Forces = _json["forces"]; }
        { if(!_json["camp"].IsNumber) { throw new SerializationException(); }  Camp = _json["camp"]; }
        PostInit();
    }

    public GraphPosCfg(int id, string name, GraphPoint.Position position, int ifActivate, int forces, int camp ) 
    {
        this.Id = id;
        this.Name = name;
        this.Position = position;
        this.IfActivate = ifActivate;
        this.Forces = forces;
        this.Camp = camp;
        PostInit();
    }

    public static GraphPosCfg DeserializeGraphPosCfg(JSONNode _json)
    {
        return new Config.GraphPosCfg(_json);
    }

    /// <summary>
    /// 节点Id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 节点名称
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 浮点数组
    /// </summary>
    public GraphPoint.Position Position { get; private set; }
    /// <summary>
    /// 是否生效
    /// </summary>
    public int IfActivate { get; private set; }
    /// <summary>
    /// 驻守兵力
    /// </summary>
    public int Forces { get; private set; }
    /// <summary>
    /// 初始所属阵营
    /// </summary>
    public int Camp { get; private set; }

    public const int __ID__ = -478475342;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        Position?.Resolve(_tables);
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        Position?.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Name:" + Name + ","
        + "Position:" + Position + ","
        + "IfActivate:" + IfActivate + ","
        + "Forces:" + Forces + ","
        + "Camp:" + Camp + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
